<style>
    /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */


    .map {
        top: 0;
        bottom: 0;
        width: 568px;
        height: 400px;
    }

    h1 {
        font-size: 22px;
        margin: 0;
        font-weight: 400;
        line-height: 20px;
        padding: 10px 2px;
    }

    a {
        color: #404040;
        text-decoration: none;
    }

        a:hover {
            color: #101010;
        }

    .heading {
        background: #fff;
        border-bottom: 1px solid #eee;
        min-height: 60px;
        line-height: 15px;
        padding: 0 0px;
        background-color: #000;
        color: #fff;
    }


    ::-webkit-scrollbar {
        width: 3px;
        height: 3px;
        border-left: 0;
        background: rgba(0,0,0,0.1);
    }

    ::-webkit-scrollbar-track {
        background: none;
    }

    ::-webkit-scrollbar-thumb {
        background: #3498db;
        border-radius: 0;
    }

    .marker {
        border: none;
        cursor: pointer;
        height: 41px;
        width: 32px;
        background-image: url(../Content/images/marker.png);
        background-color: rgba(0, 0, 0, 0);
    }

    .clearfix {
        display: block;
    }

        .clearfix:after {
            content: '.';
            display: block;
            height: 0;
            clear: both;
            visibility: hidden;
        }

    /* Marker tweaks */
    .mapboxgl-popup {
        padding-bottom: 50px;
    }

    .mapboxgl-popup-close-button {
        display: block;
    }

    .mapboxgl-popup-content {
        font: 400 12px/22px 'Source Sans Pro', 'Helvetica Neue', Sans-serif;
        padding: 0;
        border: 1px solid #bdc3c7;
        width: 250px;
    }

    .mapboxgl-popup-content-wrapper {
        padding: 1%;
    }

    .mapboxgl-popup-content h3 {
        background: #000;
        color: #fff;
        margin: 0;
        display: block;
        padding: 10px;
        border-radius: 3px 3px 0 0;
        font-weight: 700;
        margin-top: -15px;
    }

    .mapboxgl-popup-content h4 {
        margin: 0;
        display: block;
        padding: 10px 10px 10px 10px;
        font-weight: 400;
    }

    .mapboxgl-popup-content div {
        padding: 10px;
    }

    .mapboxgl-container .leaflet-marker-icon {
        cursor: pointer;
    }

    .mapboxgl-popup-anchor-top > .mapboxgl-popup-content {
        margin-top: 15px;
    }

    .mapboxgl-popup-anchor-top > .mapboxgl-popup-tip {
        border-bottom-color: #000;
    }
</style>

<div class="modal-dialog modal-md" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title">@ViewBag.Titulo</h4>
        </div>
        <div class="modal-body">
            <div id='map' class='map' > </div>
        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
        </div>
    </div><!-- /.modal-content -->
</div>

 <script>
  // This will let you use the .remove() function later on
  if (!('remove' in Element.prototype)) {
    Element.prototype.remove = function() {
      if (this.parentNode) {
          this.parentNode.removeChild(this);
      }
    };
  }

  mapboxgl.accessToken = 'pk.eyJ1Ijoic2llcm9uIiwiYSI6ImNqb3lqZWYxaDA2NDMzcXA2N281NHdjZWQifQ.pdKOn4xHJlTROHSxeM5_qA';

  // This adds the map
  var map = new mapboxgl.Map({
    // container id specified in the HTML
    container: 'map',
    // style URL
    style: 'mapbox://styles/mapbox/streets-v9',
    // initial position in [long, lat] format
    center: [@ViewBag.Coordenadas],
    // initial zoom
    zoom: 13,
    scrollZoom: false
  });

  // Add zoom and rotation controls to the map.
  map.addControl(new mapboxgl.NavigationControl());

  var stores = {
    "type": "FeatureCollection",
    "features": [
      {
        "type": "Feature",
        "geometry": {
          "type": "Point",
          "coordinates": [
            @ViewBag.Coordenadas
  
          ]
        }
      }
	
	  ]
    };
  // This adds the data to the map
  map.on('load', function (e) {
    // This is where your '.addLayer()' used to be, instead add only the source without styling a layer

    // Initialize the list


  });

  // This is where your interactions with the symbol layer used to be
  // Now you have interactions with DOM markers instead
  stores.features.forEach(function(marker, i) {
    // Create an img element for the marker
    var el = document.createElement('div');
    el.id = "marker-" + i;
    el.className = 'marker';
    // Add markers to the map at all points
    new mapboxgl.Marker(el, {offset: [0, -23]})
        .setLngLat(marker.geometry.coordinates)
        .addTo(map);

    el.addEventListener('click', function(e){
        // 1. Fly to the point
        flyToStore(marker);

        // 2. Close all other popups and display popup for clicked store
        createPopUp(marker);

        // 3. Highlight listing in sidebar (and remove highlight for all other listings)
        var activeItem = document.getElementsByClassName('active');

        e.stopPropagation();
        if (activeItem[0]) {
           activeItem[0].classList.remove('active');
        }

        var listing = document.getElementById('listing-' + i);
        listing.classList.add('active');

    });
  });


  function flyToStore(currentFeature) {
    map.flyTo({
        center: currentFeature.geometry.coordinates,
        zoom: 15
      });
  }

  function createPopUp(currentFeature) {
    var popUps = document.getElementsByClassName('mapboxgl-popup');
    if (popUps[0]) popUps[0].remove();


    var popup = new mapboxgl.Popup({closeOnClick: false})
          .setLngLat(currentFeature.geometry.coordinates)
          .setHTML(
		    '<div><b>' + currentFeature.properties.name + '</b></div>' +
            '<span>' + currentFeature.properties.address + '</span><br/>' +
			'<span>' + currentFeature.properties.colony + '</span>'

			//+ '<img src="' +  "IMG-20180416-WA0020.jpg" + '" />'
			)
          .addTo(map);
  }




    </script>
