//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Saptra.Web.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Inaeba_SaptraEntities : DbContext
    {
        public Inaeba_SaptraEntities()
            : base("name=Inaeba_SaptraEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<cCoordinacionesRegion> cCoordinacionesRegion { get; set; }
        public virtual DbSet<cCoordinacionesZona> cCoordinacionesZona { get; set; }
        public virtual DbSet<cEstatus> cEstatus { get; set; }
        public virtual DbSet<cPeriodos> cPeriodos { get; set; }
        public virtual DbSet<cTipoActividades> cTipoActividades { get; set; }
        public virtual DbSet<cTipoEstatus> cTipoEstatus { get; set; }
        public virtual DbSet<cTipoFiguras> cTipoFiguras { get; set; }
        public virtual DbSet<cTipoNotificaciones> cTipoNotificaciones { get; set; }
        public virtual DbSet<cTiposUsuario> cTiposUsuario { get; set; }
        public virtual DbSet<mLecturaCertificados> mLecturaCertificados { get; set; }
        public virtual DbSet<mCoordinacionZonaUsuario> mCoordinacionZonaUsuario { get; set; }
        public virtual DbSet<mEducandosCaptados> mEducandosCaptados { get; set; }
        public virtual DbSet<dDetallePlanSemanal> dDetallePlanSemanal { get; set; }
        public virtual DbSet<mCheckIn> mCheckIn { get; set; }
        public virtual DbSet<mPlanSemanal> mPlanSemanal { get; set; }
        public virtual DbSet<dModulos> dModulos { get; set; }
        public virtual DbSet<mBitacora> mBitacora { get; set; }
        public virtual DbSet<mMenuGrupo> mMenuGrupo { get; set; }
        public virtual DbSet<mPermisos> mPermisos { get; set; }
        public virtual DbSet<mRoles> mRoles { get; set; }
        public virtual DbSet<mNotificaciones> mNotificaciones { get; set; }
        public virtual DbSet<mUsuarios> mUsuarios { get; set; }
        public virtual DbSet<mSolicitudesVehiculo> mSolicitudesVehiculo { get; set; }
    
        [DbFunction("Entities", "Split")]
        public virtual IQueryable<Split_Result> Split(string strString)
        {
            var strStringParameter = strString != null ?
                new ObjectParameter("strString", strString) :
                new ObjectParameter("strString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[Entities].[Split](@strString)", strStringParameter);
        }
    
        [DbFunction("Entities", "udf_PlanSemanalList")]
        public virtual IQueryable<udf_PlanSemanalList_Result> udf_PlanSemanalList(Nullable<int> p_UsuarioId)
        {
            var p_UsuarioIdParameter = p_UsuarioId.HasValue ?
                new ObjectParameter("p_UsuarioId", p_UsuarioId) :
                new ObjectParameter("p_UsuarioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_PlanSemanalList_Result>("[Entities].[udf_PlanSemanalList](@p_UsuarioId)", p_UsuarioIdParameter);
        }
    
        [DbFunction("Entities", "udf_PlanSemanalValidarList")]
        public virtual IQueryable<udf_PlanSemanalValidarList_Result> udf_PlanSemanalValidarList(Nullable<int> p_UsuarioId)
        {
            var p_UsuarioIdParameter = p_UsuarioId.HasValue ?
                new ObjectParameter("p_UsuarioId", p_UsuarioId) :
                new ObjectParameter("p_UsuarioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<udf_PlanSemanalValidarList_Result>("[Entities].[udf_PlanSemanalValidarList](@p_UsuarioId)", p_UsuarioIdParameter);
        }
    }
}
